// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using Shiptech.Negotiation.Domain.Data.EfCore;
using Shiptech.Negotiation.Domain.Data.Model;
using System;


namespace Shiptech.Negotiation.Domain.Data.EfCore.Configurations
{
    public partial class RequestLocationSellerConfiguration : IEntityTypeConfiguration<RequestLocationSeller>
    {
        public void Configure(EntityTypeBuilder<RequestLocationSeller> entity)
        {
            entity.ToTable("RequestLocationSellers", "rfq");

            entity.HasIndex(e => e.Id, "IX_RequestLocationSellers");

            entity.HasIndex(e => new { e.RequestGroupId, e.IsDeleted }, "IX_RequestLocationSellers_RequestGroupId_IsDeleted");

            entity.HasIndex(e => new { e.RequestLocationId, e.SellerCounterpartyId, e.LocationId }, "UK_RequestLocationSellers")
                .IsUnique();

            entity.HasOne(d => d.RequestGroup)
                .WithMany(p => p.RequestLocationSellers)
                .HasForeignKey(d => d.RequestGroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RequestLocationSellers_RequestGroups");

            entity.HasOne(d => d.RequestLocation)
                .WithMany(p => p.RequestLocationSellers)
                .HasForeignKey(d => d.RequestLocationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RequestLocationSellers_RequestLocations");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<RequestLocationSeller> entity);
    }
}
